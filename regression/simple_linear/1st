import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
#pre_processing
dataset=pd.read_csv('Salary_Data.csv')  
X=dataset.iloc[:,:-1].values          
Y=dataset.iloc[:,1].values
from sklearn.cross_validation import train_test_split
X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=1/3,random_state=0)

'''#feature Scaling
from sklearn.preprocessing import StandardScaler #no use on y
sc_X=StandardScaler()  # making object
X_train=sc_X.fit_transform(X_train)
X_test=sc_X.transform(X_test)         #test is part  so only fit '''



#Simple regression
#fitting the data
from sklearn.linear_model import LinearRegression
regressor=LinearRegression()      #making object of the class Linearregression
regressor.fit(X_train,Y_train) #calling fit function of the class
#here fit function helped to learn to predict the values 

#predict the a TEST data
Y_pred=regressor.predict(X_test)     #predicted value of X_test and compare with Y_test

#plot the graph using matplotlb for training set

plt.scatter(X_train,Y_train,color='red')
plt.plot(X_train,regressor.predict(X_train),color='blue')
plt.title('Experience vs Salary')
plt.xlabel('Experience')
plt.ylabel('Salary')
plt.show()


#plot the graph using matplotlb for test set

plt.scatter(X_test,Y_test,color='red')
plt.plot(X_train,regressor.predict(X_train),color='blue') #as prediction is same the line will be same
plt.title('Experience vs Salary(Test_set)')
plt.xlabel('Experience')
plt.ylabel('Salary')
plt.show()

